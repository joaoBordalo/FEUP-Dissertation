@article{Datta2008,
abstract = {Understanding the most efficient design and utilization of emerging multicore systems is one of the most challenging questions faced by the mainstream and scientific computing industries in several decades. Our work explores multicore stencil (nearest-neighbor) computations -- a class of algorithms at the heart of many structured grid codes, including PDE solvers. We develop a number of effective optimization strategies, and build an auto-tuning environment that searches over our optimizations and their parameters to minimize runtime, while maximizing performance portability. To evaluate the effectiveness of these strategies we explore the broadest set of multicore architectures in the current HPC literature, including the Intel Clovertown, AMD Barcelona, Sun Victoria Falls, IBM QS22 PowerXCell 8i, and NVIDIA GTX280. Overall, our auto- tuning optimization methodology results in the fastest multicore stencil performance to date. Finally, we present several key insights into the architectural trade-offs of emerging multicore designs and their implications on scientific algorithm development.},
author = {Datta, Kaushik and Murphy, Mark and Volkov, Vasily and Williams, Samuel and Carter, Jonathan and Oliker, Leonid and Patterson, David and Shalf, John and Yelick, Katherine},
doi = {10.1109/SC.2008.5222004},
file = {:D$\backslash$:/Github/FEUP-Dissertation/articles/Stencil Computation Optimizationand Auto-tuning on State-of-the-Art Multicore Architectures.pdf:pdf},
isbn = {9781424428359},
issn = {1424428351},
journal = {2008 SC - International Conference for High Performance Computing, Networking, Storage and Analysis, SC 2008},
pmid = {3115053},
title = {{Stencil computation optimization and auto-tuning on state-of-the-art multicore architectures}},
year = {2008}
}

@article{Garcia2012,
author = {Garcia, Saturnino and Jeon, Donghwan and Louie, Christopher and Bedford, Michael and Diego, San},
file = {:D$\backslash$:/Github/FEUP-Dissertation/articles/KremlinIEEE2012.pdf:pdf},
pages = {42--53},
title = {{the Kremlin Oracle for the Kremlin Open - Source Tool Helps Programmers By Automatically Identi-}},
year = {2012}
}


@article{Gummaraju2010,
abstract = {Modern processors are evolving into hybrid, heterogeneous processors with both CPU and GPU cores used for general purpose computation. Several languages such as Brook, CUDA, and more recently OpenCL are being developed to fully harness the potential of these processors. These languages typically involve the control code running on the CPU and the performance-critical, data-parallel kernel code running on the GPUs. In this paper, we present Twin Peaks, a software platform for heterogeneous computing that executes code originally targeted for GPUs efficiently on CPUs as well. This permits a more balanced execution between the CPU and GPU, and enables portability of code between these architectures and to CPU-only environments. We propose several techniques in the runtime system to efficiently utilize the caches and functional units present in CPUs. Using OpenCL as a canonical language for heterogeneous computing, and running several experiments on real hardware, we show that our techniques enable GPGPU-style code to execute efficiently on multicore CPUs with minimal runtime overhead. These results also show that for maximum performance, it is beneficial for applications to utilize both CPUs and GPUs as accelerator targets.},
author = {Gummaraju, Jayanth and Morichetti, Laurent and Houston, Michael and Sander, Ben and Gaster, Benedict R. and Zheng, Bixia},
doi = {10.1145/1854273.1854302},
file = {:D$\backslash$:/Github/FEUP-Dissertation/articles/p205-gummaraju.pdf:pdf},
isbn = {9781450301787},
issn = {1089795X},
journal = {Proceedings of the 19th international conference on Parallel architectures and compilation techniques - PACT '10},
keywords = {gpgpu,multicore,opencl,programmabil-},
pages = {205},
title = {{Twin peaks: a software platform for heterogeneous computing on general-purpose and graphics processors}},
url = {http://portal.acm.org/citation.cfm?id=1854273.1854302$\backslash$nhttp://dl.acm.org/citation.cfm?id=1854302$\backslash$nhttp://portal.acm.org/citation.cfm?doid=1854273.1854302},
year = {2010}
}

@article{Gadioli2015,
abstract = {In this work, we introduce an application autotuning framework to dynamically adapt applications in multicore architectures. In particular, the framework exploits design-time knowledge and multi-objective requirements expressed by the user, to drive the autotuning process at the runtime. It also exploits a monitoring infrastructure to get runtime feed-back and to adapt to external changing conditions. The intrusiveness of the autotuning framework in the application (in terms of refactoring and lines of code to be added) has been kept limited, also to minimize the integration cost. To assess the proposed framework, we carried out an experimental campaign to evaluate the overhead, the relevance of the described features and the efficiency of the framework. {\&}copy; 2015 IEEE.},
author = {Gadioli, Davide and Palermo, Gianluca and Silvano, Cristina},
doi = {10.1109/SAMOS.2015.7363673},
file = {:D$\backslash$:/Github/FEUP-Dissertation/articles/Application Autotuning to Support Runtime Adaptivity in Multicore Architectures.pdf:pdf},
isbn = {9781467373111},
journal = {Proceedings - 2015 International Conference on Embedded Computer Systems: Architectures, Modeling and Simulation, SAMOS 2015},
pages = {173--180},
title = {{Application autotuning to support runtime adaptivity in multicore architectures}},
year = {2015}
}
